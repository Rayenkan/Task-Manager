# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'task.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.uic import *
from PyQt5.QtWidgets import *
import re 
import mysql.connector
f=open("storage.txt","r")
username=f.read()
f.close

class Ui_addtask(object):
    
    def openWindow3(self , addtask):
        from login import Ui_loginpage
        addtask.close()
        self.win = QtWidgets.QMainWindow()
        self.ui = Ui_loginpage()
        self.ui.setupUi(self.win)
        self.win.show()
    def testdate(self,ch):
        pattern = r'^\d{4}/\d{2}/\d{2}$'
        match = re.match(pattern, ch)

        if match is None:
            return False
        else:
            return True
    def addtask(self , username):
        
        #connection
        connect = mysql.connector.connect(
                host="localhost",
                user="root",
                password="",
                database="task manager",
            )

        base = connect.cursor()

        #getting task info
        tname=self.tname.text()
        desc=self.desc.text()
        date=self.date.text()
        prio=self.prio.text()
        
        
        #checking if the prio strin the user offered is in the db 
        base.execute("select prio from priority where prio =%s",(prio,))
        test=base.fetchall()#test is list type
        
        #checking values
        if tname == "" or desc=="" or date =="" or prio=="" :
            QMessageBox.critical(self.win,"wrong!!","you should insert all values ")
            tname=self.tname.text()
            desc=self.desc.text()
            date=self.date.text()
            prio=self.prio.text()
            return False 
        
        
        
        elif len(test)==0 :
            QMessageBox.critical(self.win,"wrong!!","you have to choose low mid or high priority ")
            prio=self.prio.text()
            return False
        
        elif self.testdate(date) !=True :
            QMessageBox.critical(self.win,"wrong!!","date should be in the form of 'YYYY/MM/DD' ")
            date=self.date.text()
            print(date)
            return False
        
        else:
            #inserting task info in db
            base.execute("select * from task ")
            base.fetchall()
            nb = base.rowcount + 1
            base.execute("select * from task WHERE username = %s  ",(username,))
            base.fetchall()

            try:
                base.execute("INSERT INTO task VALUES(%s,%s,%s,%s,%s,%s)",(nb,username,tname,desc,date,prio))
                connect.commit()
                QMessageBox.information(self.win,"success","task added succefully !")
                return True
            except mysql.connector.Error as error :
                print(str(error))
    def showtask(self , username):
        self.lw.clear()
        #connecting to the db
        connect=mysql.connector.connect(
            host="localhost",
            user="root",
            password="",
            database="task manager")
        base=connect.cursor()
        if self.pr.isChecked()==True :
            base.execute("select * from task WHERE username = %s ORDER BY prioritylvl ",(username,))
            infos=base.fetchall()
            for info in infos :
                ch=str(info[0])+":"+"task "+str(info[2])+"   "+"due :"+str(info[4])+"\n"+"description: "+str(str(info[3]))+"\n"+"priority: "+str(str(info[5]))+"\n"
                self.lw.addItem(ch)
        elif self.dr.isChecked()==True :
            base.execute("select * from task WHERE username = %s ORDER BY date desc ",(username,))
            infos=base.fetchall()
            for info in infos :
                ch=str(info[0])+":"+"task "+str(info[2])+"   "+"due :"+str(info[4])+"\n"+"description: "+str(str(info[3]))+"\n"+"priority: "+str(str(info[5]))+"\n"
                self.lw.addItem(ch)
        else :
            #getting info from base 
            base.execute("select * from task WHERE username = %s",(username,))
            infos=base.fetchall()
            for info in infos :
                ch=str(info[0])+":"+"task "+str(info[2])+"   "+"due :"+str(info[4])+"\n"+"description: "+str(str(info[3]))+"\n"+"priority: "+str(str(info[5]))+"\n"
                self.lw.addItem(ch)
    def setupUi(self, addtask):
        self.win=addtask
        addtask.setObjectName("addtask")
        addtask.resize(891, 613)
        addtask.setStyleSheet("background-color: rgb(0, 170, 255);")
        self.widget_2 = QtWidgets.QWidget(addtask)
        self.widget_2.setGeometry(QtCore.QRect(90, 30, 711, 521))
        self.widget_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.widget_2.setObjectName("widget_2")
        self.label_5 = QtWidgets.QLabel(self.widget_2)
        self.label_5.setGeometry(QtCore.QRect(180, 10, 321, 61))
        self.label_5.setMinimumSize(QtCore.QSize(321, 0))
        font = QtGui.QFont()
        font.setPointSize(28)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("color: rgb(0, 170, 255);")
        self.label_5.setTextFormat(QtCore.Qt.PlainText)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.widget_2)
        self.label_6.setGeometry(QtCore.QRect(10, 100, 101, 21))
        self.label_6.setStyleSheet("font: 75 14pt \"MS Shell Dlg 2\";\n"
"color: rgb(0, 170, 255);")
        self.label_6.setObjectName("label_6")
        self.tname = QtWidgets.QLineEdit(self.widget_2)
        self.tname.setGeometry(QtCore.QRect(120, 90, 161, 31))
        self.tname.setObjectName("tname")
        self.label_7 = QtWidgets.QLabel(self.widget_2)
        self.label_7.setGeometry(QtCore.QRect(10, 160, 101, 21))
        self.label_7.setStyleSheet("font: 75 14pt \"MS Shell Dlg 2\";\n"
"color: rgb(0, 170, 255);")
        self.label_7.setObjectName("label_7")
        self.desc = QtWidgets.QLineEdit(self.widget_2)
        self.desc.setGeometry(QtCore.QRect(120, 150, 161, 31))
        self.desc.setObjectName("desc")
        self.addt = QtWidgets.QPushButton(self.widget_2)
        self.addt.setGeometry(QtCore.QRect(170, 370, 111, 31))
        self.addt.setStyleSheet("background-color: rgb(0, 170, 255);\n"
"font: 75 12pt \"MS Shell Dlg 2\";\n"
"color: rgb(255, 255, 255);")
        self.addt.setObjectName("addt")
        
        self.addt.clicked.connect(lambda: self.addtask(username))
        
        self.label_9 = QtWidgets.QLabel(self.widget_2)
        self.label_9.setGeometry(QtCore.QRect(10, 220, 101, 21))
        self.label_9.setStyleSheet("font: 75 14pt \"MS Shell Dlg 2\";\n"
"color: rgb(0, 170, 255);")
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.widget_2)
        self.label_10.setGeometry(QtCore.QRect(10, 280, 101, 21))
        self.label_10.setStyleSheet("font: 75 14pt \"MS Shell Dlg 2\";\n"
"color: rgb(0, 170, 255);")
        self.label_10.setObjectName("label_10")
        self.date = QtWidgets.QLineEdit(self.widget_2)
        self.date.setGeometry(QtCore.QRect(120, 210, 161, 31))
        self.date.setObjectName("date")
        self.prio = QtWidgets.QLineEdit(self.widget_2)
        self.prio.setGeometry(QtCore.QRect(120, 270, 161, 31))
        self.prio.setObjectName("prio")
        self.showt = QtWidgets.QPushButton(self.widget_2)
        self.showt.setGeometry(QtCore.QRect(470, 370, 111, 31))
        self.showt.setStyleSheet("background-color: rgb(0, 170, 255);\n"
"font: 75 12pt \"MS Shell Dlg 2\";\n"
"color: rgb(255, 255, 255);")
        self.showt.setObjectName("showt")
        
        self.showt.clicked.connect(lambda: self.showtask(username))
        
        self.label_11 = QtWidgets.QLabel(self.widget_2)
        self.label_11.setGeometry(QtCore.QRect(320, 370, 16, 21))
        self.label_11.setStyleSheet("font: 75 14pt \"MS Shell Dlg 2\";\n"
"color: rgb(0, 170, 255);")
        self.label_11.setObjectName("label_11")
        self.lw = QtWidgets.QListWidget(self.widget_2)
        self.lw.setGeometry(QtCore.QRect(360, 90, 321, 211))
        self.lw.setObjectName("lw")
        self.signin_4 = QtWidgets.QPushButton(self.widget_2)
        self.signin_4.setGeometry(QtCore.QRect(590, 480, 111, 31))
        self.signin_4.setStyleSheet("background-color: lightblue ;\n"
"font: 75 12pt \"MS Shell Dlg 2\";\n"
"color: black;")
        self.signin_4.setObjectName("signin_4")
        self.logout = QtWidgets.QPushButton(self.widget_2)
        self.logout.setGeometry(QtCore.QRect(460, 480, 111, 31))
        self.logout.setStyleSheet("background-color: rgb(0, 170, 255);\n"
"font: 75 12pt \"MS Shell Dlg 2\";\n"
"color: rgb(255, 255, 255);")
        self.logout.setObjectName("addt_2")
        
        self.logout.clicked.connect(lambda: self.openWindow3(addtask))#________________
        
        self.addt_3 = QtWidgets.QPushButton(self.widget_2)
        self.addt_3.setGeometry(QtCore.QRect(30, 370, 111, 31))
        self.addt_3.setStyleSheet("background-color: rgb(0, 170, 255);\n"
"font: 75 12pt \"MS Shell Dlg 2\";\n"
"color: rgb(255, 255, 255);")
        self.addt_3.setObjectName("addt_3")
        self.label_12 = QtWidgets.QLabel(self.widget_2)
        self.label_12.setGeometry(QtCore.QRect(360, 330, 111, 21))
        self.label_12.setStyleSheet("font: 75 14pt \"MS Shell Dlg 2\";\n"
"color: rgb(0, 170, 255);")
        self.label_12.setObjectName("label_12")
        self.dr = QtWidgets.QRadioButton(self.widget_2)
        self.dr.setGeometry(QtCore.QRect(480, 330, 51, 17))
        self.dr.setObjectName("dr")
        self.pr = QtWidgets.QRadioButton(self.widget_2)
        self.pr.setGeometry(QtCore.QRect(580, 330, 82, 17))
        self.pr.setObjectName("pr")

        self.retranslateUi(addtask)
        self.addt_3.clicked.connect(self.prio.clear) # type: ignore
        self.addt_3.clicked.connect(self.date.clear) # type: ignore
        self.addt_3.clicked.connect(self.desc.clear) # type: ignore
        self.addt_3.clicked.connect(self.tname.clear) # type: ignore
        self.signin_4.clicked.connect(addtask.close) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(addtask)

    def retranslateUi(self, addtask):
        _translate = QtCore.QCoreApplication.translate
        addtask.setWindowTitle(_translate("addtask", "Form"))
        self.label_5.setWhatsThis(_translate("addtask", "<html><head/><body><p align=\"justify\"><span style=\" font-size:22pt;\"><br/></span></p></body></html>"))
        self.label_5.setText(_translate("addtask", "Task manager"))
        self.label_6.setText(_translate("addtask", "task name :"))
        self.label_7.setText(_translate("addtask", "description :"))
        self.addt.setText(_translate("addtask", "add task"))
        self.label_9.setText(_translate("addtask", "due date :"))
        self.label_10.setText(_translate("addtask", "priority :"))
        self.showt.setText(_translate("addtask", "show tasks"))
        self.label_11.setText(_translate("addtask", "or"))
        self.signin_4.setText(_translate("addtask", "Close"))
        self.logout.setText(_translate("addtask", "logout"))
        self.addt_3.setText(_translate("addtask", "Clear"))
        self.label_12.setText(_translate("addtask", "ordered by :"))
        self.dr.setText(_translate("addtask", "date"))
        self.pr.setText(_translate("addtask", "priority"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    addtask = QtWidgets.QWidget()
    ui = Ui_addtask()
    ui.setupUi(addtask)
    addtask.show()
    sys.exit(app.exec_())
